{"version":3,"sources":["webpack:///./src/api/list.js","webpack:///./src/views/List/BasicTable.tsx","webpack:///./src/views/List/list.module.less"],"names":["listData","Mock","mock","id","detail","title","handler","date","progress","tableData","no","domain","num","status","getListData","io","get","getTableData","Search","BasicTable","styles","state","searchText","searchInput","getFilterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","size","handleReset","setState","getStatusProps","render","text","className","pointer","filters","onFilter","record","then","res","data","Extra","placeholder","marginLeft","columns","dataIndex","filterDropdown","this","sorter","a","b","key","bordered","extra","dataSource","React","Component","module","exports"],"mappings":"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","file":"static/js/src-views-List-BasicTable.1b83abaf.chunk.js","sourcesContent":["import io from '@utils/io';\nimport Mock from 'mockjs';\n\nconst listData = Mock.mock({\n  'data|6-10': [\n    {\n      id: '@id',\n      detail: '@paragraph(1)',\n      title: '@name',\n      handler: '@cname',\n      date: '@date(yyyy-MM-dd HH:mm:ss)',\n      progress: '@natural(1,100)'\n    }\n  ]\n});\n\nMock.mock('/get/listData', listData);\n\nconst tableData = Mock.mock({\n  'data|30-60': [\n    {\n      'key|+1': 1,\n      no: '@string(10)',\n      domain: '@domain',\n      num: '@natural(1,100)',\n      status: '@natural(0,3)',\n      date: '@date(yyyy-MM-dd HH:mm:ss)'\n    }\n  ]\n});\n\nMock.mock('/get/tableData', tableData);\n\nexport function getListData() {\n  return io.get('/get/listData');\n}\n\nexport function getTableData() {\n  return io.get('/get/tableData');\n}\n","import React from 'react';\nimport PageWrapper from '@components/PageWrapper';\nimport FormatterLocale from '@components/FormatterLocale';\nimport { Card, Table, Button, Input, Divider, Space } from 'antd';\nimport { getTableData } from '@api/list';\nimport styles from './list.module.less';\nimport { SearchOutlined } from '@ant-design/icons';\n\ninterface BasicTableState {\n  tableData: {\n    date: string;\n    domain: string;\n    key: number;\n    no: string;\n    num: number;\n    status: number;\n  }[];\n  searchText: string;\n}\n\nconst Search = Input.Search;\nclass BasicTable extends React.Component<{}, BasicTableState> {\n  status = ['正常', '维护', '已下线', '异常'];\n  styles = ['progress', 'maintain', 'offline', 'error'];\n  state = {\n    tableData: [],\n    searchText: ''\n  };\n  searchInput: any = '';\n\n  componentDidMount() {\n    getTableData().then((res: any) => {\n      const data = res.data;\n      this.setState({\n        tableData: data\n      });\n    });\n  }\n\n  getFilterDropdown = ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Space>\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </Space>\n    </div>\n  );\n\n  handleSearch = (selectedKeys: any, confirm: any) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0]\n    });\n  };\n\n  handleReset = (clearFilters: Function) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  getStatusProps = () => ({\n    render: (text: number) => {\n      return (\n        <span>\n          <span className={`${styles.pointer} ${styles[this.styles[text]]}`} />\n          {this.status[text]}\n        </span>\n      );\n    },\n    filters: [\n      {\n        text: '正常',\n        value: 1\n      },\n      {\n        text: '维护',\n        value: 2\n      },\n      {\n        text: '已下线',\n        value: 3\n      },\n      {\n        text: '异常',\n        value: 4\n      }\n    ],\n    onFilter: (value: any, record: any) => {\n      return record.status === value;\n    }\n  });\n\n  render() {\n    const Extra = (\n      <div>\n        <Search placeholder=\"搜索\" style={{ width: 200, marginLeft: '8px' }} />\n      </div>\n    );\n\n    const columns = [\n      {\n        title: '#',\n        dataIndex: 'key'\n      },\n      {\n        title: '编号',\n        dataIndex: 'no'\n      },\n      {\n        title: '域名',\n        dataIndex: 'domain',\n        filterDropdown: this.getFilterDropdown\n      },\n      {\n        title: '访问次数',\n        dataIndex: 'num',\n        sorter: (a: any, b: any) => a.num - b.num\n      },\n      {\n        title: '状态',\n        dataIndex: 'status',\n        ...this.getStatusProps()\n      },\n      {\n        title: '更新时间',\n        dataIndex: 'date'\n      },\n      {\n        title: '操作',\n        key: 'action',\n        render: () => {\n          return (\n            <span>\n              <Button type=\"link\">配置</Button>\n              <Divider type=\"vertical\" />\n              <Button type=\"link\">Delete</Button>\n            </span>\n          );\n        }\n      }\n    ];\n    const { tableData } = this.state;\n    return (\n      <PageWrapper title={<FormatterLocale id=\"basicTable.title\" />}>\n        <Card\n          title={<Button type=\"primary\">新建</Button>}\n          className=\"fat-card\"\n          bordered={false}\n          extra={Extra}\n        >\n          <Table className=\"no-head-border\" bordered columns={columns} dataSource={tableData} />\n        </Card>\n      </PageWrapper>\n    );\n  }\n}\n\nexport default BasicTable;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-overflow\":\"text-overflow--2CXVY\",\"close-Icon\":\"close-Icon--2lL7K\",\"extraContent\":\"extraContent--1AFFq\",\"content\":\"content--EWR_5\",\"listContainer\":\"listContainer--1TjkO\",\"createButton\":\"createButton--2hPqI\",\"description\":\"description--3fIAx\",\"images\":\"images--3zfy8\",\"pointer\":\"pointer--1kcsD\",\"maintain\":\"maintain--2NhDh\",\"error\":\"error--32e2h\",\"offline\":\"offline--21VNx\",\"progress\":\"progress--1QW6U\",\"progressing\":\"progressing--VfKRo\"};"],"sourceRoot":""}