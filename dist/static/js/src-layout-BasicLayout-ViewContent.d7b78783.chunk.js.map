{"version":3,"sources":["webpack:///./src/layout/BasicLayout/ViewContent.tsx","webpack:///./src/utils/authorityTools.ts"],"names":["Exception403","React","lazy","ViewContent","props","location","useLocation","route","children","routeAuthority","getRouteAuthority","pathname","routes","unidentified","fallback","spinning","className","getAuthority","str","authority","authorityString","localStorage","getItem","JSON","parse","e","setAuthority","proAuthority","setItem","stringify","clearAuthority","removeItem","_getAuthority","_routes","forEach","_route","path"],"mappings":"qIAAA,4OAMMA,EAAeC,IAAMC,MAAK,kBAAM,6DAwBvBC,UAtBuC,SAAAC,GACpD,IAAIC,EAAWC,cACPC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACTC,EAAgDC,4BACpDL,EAASM,SACTJ,EAAMK,QAGR,OACE,kBAAC,UAAD,CACEH,eAAgBA,EAChBI,aACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,UAAD,CAASC,UAAQ,KACnC,kBAACf,EAAD,QAIJ,0BAAMgB,UAAU,mCAAmCR,M,6DCpBlD,SAASS,EAAaC,GAC3B,IACIC,EADEC,EAAiC,qBAARF,EAAsBG,aAAaC,QAAQ,gBAAkBJ,EAE5F,IAEEC,EAAYI,KAAKC,MAAMJ,GACvB,MAAOK,GACPN,EAAYC,EAEd,MAAyB,kBAAdD,EACF,CAACA,GAEHA,EAOF,SAASO,EAAaP,GAC3B,IAAMQ,EAAoC,kBAAdR,EAAyB,CAACA,GAAaA,EACnEE,aAAaO,QAAQ,eAAgBL,KAAKM,UAAUF,IAI/C,SAASG,IACdT,aAAaU,WAAW,gBAQnB,SAASrB,EAAkBC,GAA+C,IAC3EF,EAWJ,OAVsB,SAAhBuB,EAAiBrB,EAAkBsB,GAQvC,OAPAA,EAAQC,SAAQ,SAAAC,GACVxB,IAAawB,EAAOC,KACtB3B,EAAiB0B,EAAOhB,UACfgB,EAAOvB,SAChBH,EAAiBuB,EAAcrB,EAAUwB,EAAOvB,YAG7CH,EAEFuB,CAAcrB,EAZyD,uDAAJ,IAvC5E","file":"static/js/src-layout-BasicLayout-ViewContent.d7b78783.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport Authorized from '@components/Authorized';\nimport { getRouteAuthority } from '@utils/authorityTools';\nimport Loading from '@components/Loading';\nimport { useLocation } from 'react-router-dom';\n\nconst Exception403 = React.lazy(() => import(/* webpackChunkName: \"403\" */ '@views/Exception/403'));\n\nconst ViewContent: React.FC<{ route: RouteConfig }> = props => {\n  let location = useLocation();\n  const { route, children } = props;\n  const routeAuthority: undefined | string | string[] = getRouteAuthority(\n    location.pathname,\n    route.routes\n  );\n\n  return (\n    <Authorized\n      routeAuthority={routeAuthority}\n      unidentified={\n        <Suspense fallback={<Loading spinning />}>\n          <Exception403 />\n        </Suspense>\n      }\n    >\n      <main className=\"RA-basicLayout-wrapper-viewMain\">{children}</main>\n    </Authorized>\n  );\n};\n\nexport default ViewContent;\n","/**\n * 获取权限\n * @param {str} string 未处理的权限\n * @return {authority} {Array<string>} 权限结果\n */\nexport function getAuthority(str?: string | string[]) {\n  const authorityString = typeof str === 'undefined' ? localStorage.getItem('RA-authority') : str;\n  let authority;\n  try {\n    // @ts-ignore\n    authority = JSON.parse(authorityString);\n  } catch (e) {\n    authority = authorityString;\n  }\n  if (typeof authority === 'string') {\n    return [authority];\n  }\n  return authority;\n}\n\n/**\n * 设置权限\n * @param {authority} string|array 权限\n */\nexport function setAuthority(authority: string | string[]) {\n  const proAuthority = typeof authority === 'string' ? [authority] : authority;\n  localStorage.setItem('RA-authority', JSON.stringify(proAuthority));\n}\n\n// 清除权限\nexport function clearAuthority() {\n  localStorage.removeItem('RA-authority');\n}\n\n/**\n * 获取路由权限\n * @param {pathname} string 路由路径\n * @return {routeAuthority} {string} 路由对应权限\n */\nexport function getRouteAuthority(pathname: string, routes: RouteConfig[] = []) {\n  let routeAuthority: undefined | string | string[];\n  const _getAuthority = (pathname: string, _routes: RouteConfig[]) => {\n    _routes.forEach(_route => {\n      if (pathname === _route.path) {\n        routeAuthority = _route.authority;\n      } else if (_route.routes) {\n        routeAuthority = _getAuthority(pathname, _route.routes);\n      }\n    });\n    return routeAuthority;\n  };\n  return _getAuthority(pathname, routes);\n}\n"],"sourceRoot":""}