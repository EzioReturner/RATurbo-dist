{"version":3,"sources":["webpack:///delegated ./node_modules/antd/es/checkbox/index.js from dll-reference _dll_components","webpack:///delegated ./node_modules/antd/es/form/index.js from dll-reference _dll_components","webpack:///delegated ./node_modules/antd/es/input/index.js from dll-reference _dll_components","webpack:///./src/views/User/LoginForm.tsx"],"names":["module","exports","__webpack_require__","inject","props","useState","loading","setLoading","history","useHistory","propsHandleError","handleError","userStore","className","siteName","Fragment","name","initialValues","remember","onFinish","values","username","password","Promise","handleUserLogin","then","res","success","setTimeout","push","Item","rules","required","message","prefix","placeholder","type","valuePropName","noStyle","href","id","htmlType"],"mappings":"0HAAAA,EAAOC,QAAWC,EAAoB,gCAArB,CAAuD,M,uDCAxEF,EAAOC,QAAWC,EAAoB,gCAArB,CAAuD,M,wDCAxEF,EAAOC,QAAWC,EAAoB,gCAArB,CAAuD,M,67CCkHzDC,2BAAO,YAAPA,EAjG6B,SAAAC,GAAU,IAAD,IACrBC,oBAAS,GADY,GAC5CC,EAD4C,KACnCC,EADmC,KAE7CC,EAAUC,uBAFmC,EAGEL,EAAhCM,EAH8B,EAG3CC,YAA+BC,EAHY,EAGZA,UA4BvC,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,cACC,aAAbC,WACC,kBAAC,IAAMC,SAAP,SACG,mCADH,UAIAD,YAGJ,6BACEE,KAAK,eACLH,UAAU,aACVI,cAAe,CAAEC,UAAU,GAC3BC,SAhCe,SAACC,GACpBb,GAAW,GADmC,IAEtCc,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAClB,OAAO,IAAIC,SAAQ,WACjBX,EAAUY,gBAAgBH,EAAUC,GAAUG,MAAK,SAAAC,GAC7CA,GACF,UAAQC,QAAQ,iBAChBC,YAAW,WAVjBpB,EAAQqB,KAAK,gBAYJ,OAjBTtB,GAAW,GACXG,aAyCI,4BAAMoB,KAAN,CACEd,KAAK,WACLe,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,6BACEC,OAAQ,kBAAC,IAAD,CAAcrB,UAAU,wBAChCsB,YAAY,6BAGhB,4BAAML,KAAN,CACEd,KAAK,WACLe,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,6BACEC,OAAQ,kBAAC,IAAD,CAAcrB,UAAU,wBAChCuB,KAAK,WACLD,YAAY,mBAGhB,4BAAML,KAAN,KACE,4BAAMA,KAAN,CAAWd,KAAK,WAAWqB,cAAc,UAAUC,SAAO,GACxD,iCACE,+CAIJ,uBAAGzB,UAAU,oBAAoB0B,KAAK,IAAtC,oBAKF,4BAAMT,KAAN,KACE,6BACEU,GAAG,eACHJ,KAAK,UACLK,SAAS,SACT5B,UAAU,oBACVP,QAASA,GALX,UASA,sCACA,uBAAGiC,KAAK,IAAR,wB","file":"static/js/src-views-User-LoginForm.d58eda95.chunk.js","sourcesContent":["module.exports = (__webpack_require__(\"dll-reference _dll_components\"))(114);","module.exports = (__webpack_require__(\"dll-reference _dll_components\"))(718);","module.exports = (__webpack_require__(\"dll-reference _dll_components\"))(222);","import React, { Fragment, useState } from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Button, Input, Checkbox, message, Form } from 'antd';\nimport { siteName } from '@config/setting';\nimport UserStore from '@store/userStore';\nimport { inject } from 'mobx-react';\nimport { useHistory } from 'react-router-dom';\nimport './login.less';\nimport 'animate.css';\n\ninterface LoginFormProps {\n  handleError: Function;\n}\ninterface InjectedProps extends LoginFormProps {\n  userStore: UserStore;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = props => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { handleError: propsHandleError, userStore } = props as InjectedProps;\n\n  const handleError = () => {\n    setLoading(false);\n    propsHandleError();\n  };\n\n  const handleSuccess = () => {\n    history.push('/dashboard');\n  };\n\n  const handleSubmit = (values: StoreKeyValue) => {\n    setLoading(true);\n    const { username, password } = values;\n    return new Promise(() => {\n      userStore.handleUserLogin(username, password).then(res => {\n        if (res) {\n          message.success('login success');\n          setTimeout(() => {\n            handleSuccess();\n          }, 800);\n        } else {\n          handleError();\n        }\n      });\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"loginTitle\">\n        {siteName === 'RA-Turbo' ? (\n          <React.Fragment>\n            R<span>A</span>-TORBO\n          </React.Fragment>\n        ) : (\n          siteName\n        )}\n      </div>\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={handleSubmit}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your Username!' }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username: admin | guest\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your Password!' }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password: 123\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>\n              <span>Remember me</span>\n            </Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            id=\"login_button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            loading={loading}\n          >\n            Log in\n          </Button>\n          <span> Or </span>\n          <a href=\"\">register now!</a>\n        </Form.Item>\n      </Form>\n    </Fragment>\n  );\n};\n\nexport default inject('userStore')(LoginForm);\n"],"sourceRoot":""}